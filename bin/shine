#!/usr/bin/env ruby

$:.unshift File.join(File.dirname(__FILE__), '..', 'lib')

require 'shining'
include Shining::FileMethods

ACTIONS   = {
  :new_on!            => ['build'],
  :new_slide!         => ['slide'],
  :compile_templates! => ['compile'],
  :play               => ['play', 'go'],
  :deploy             => ['deploy'],
  :remove             => ['remove', 'delete', 'rm'],
  :version            => ['version']
}

def bail! reason
  Shining.error reason
  exit -2
end

def figure_what_to_do!
  help_and_exit! if ARGV.empty?
  if ACTIONS.values.flatten.include? ARGV.first
    action = ACTIONS.select { |action, args| args.include? ARGV.first }.flatten.first
    send action, *ARGV[1..(ARGV.length - 1)]
  else
    new_on! ARGV.first
  end
end

def help_and_exit!
  STDERR.puts <<-HELP
Shine - Generates a new Shining presentation
  Usage:
    shine <directory>
  Example:
    shine mycoolpreso
  HELP
  exit -1
end

def new_on! dir
  Shining::Preso.new dir
end

def new_slide! name, format = 'html'
  preso = Shining::Preso.open Dir.pwd
  name, extension = name_and_extension(name)
  extension = format if extension.blank?
  preso.new_slide "#{name}.#{extension}", :with => ['styles', 'script']
end

def compile_templates!
  preso = Shining::Preso.open Dir.pwd
  preso.compile_templates!
end

def play
  preso = Shining::Preso.open Dir.pwd
  player = Shining::Player.new preso
  player.go!
end

def deploy name = nil
  preso = Shining::Preso.open Dir.pwd
  Shining::Heroku.deploy preso, name
end

def remove slide
  preso = Shining::Preso.open Dir.pwd
  preso.remove_slide slide
end

def version
  Shining.say Shining::VERSION
end

figure_what_to_do!