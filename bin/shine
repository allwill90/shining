#!/usr/bin/env ruby

require 'rubygems'
require 'fileutils'

ROOT    = File.join(File.dirname(__FILE__), '..')
ACTIONS = {:new_on! => ['build'], :new_slide! => ['slide']}

class String; def /(s) File.join(self, s) end end

def doing(what, &block)
  puts what
  block.call if block_given?
end

def bail!(reason)
  STDERR.puts(reason) and exit(-2)
end

def figure_what_to_do!
  help_and_exit! if ARGV.empty?
  if ACTIONS.values.flatten.include? ARGV.first
    action = ACTIONS.select { |action, args| args.include? ARGV.first }.flatten.first
    send action, *ARGV[1..(ARGV.length - 1)]
  else
    new_on! ARGV.first
  end
end

def help_and_exit!
  STDERR.puts <<-HELP
Shine - Generates a new Shining presentation
  Usage:
    shine <directory>
  Example:
    shine mycoolpreso
  HELP
  exit -1
end

def new_on!(dir)
  target = File.expand_path(dir)
  doing("Creating #{target/'themes'}")      { FileUtils.mkdir_p target/'themes' }
  doing("Creating #{target/'slides'}")      { FileUtils.mkdir   target/'slides' }
  doing("Creating #{target/'config.json'}") { FileUtils.cp ROOT/'templates'/'config.json', target/'config.json' }
  doing("Creating #{target/'config'}")      { FileUtils.cp_r ROOT/'templates'/'pages', target/'pages' }
end

def new_slide!(name)
  bail!("This isn't a Shining preso!") unless shining?
  doing("Creating #{Dir.pwd/'slides'/name}.html")  { FileUtils.touch Dir.pwd/'slides'/name + '.html' }
  doing("Creating #{Dir.pwd/'slides'/name}.js")    { FileUtils.touch Dir.pwd/'slides'/name + '.js' }  
end

def shining?
  File.exists?(Dir.pwd/'config.json') and File.directory?(Dir.pwd/'slides')
end

figure_what_to_do!